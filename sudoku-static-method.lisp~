(defun list-to-2d-array (list)
  (make-array (list (length list)
                    (length (first list)))
              :initial-contents list))

(defun line-column (sens x y)
  "renvoie la liste '(x y) ou '(y x) si l'on traite les column ou les lignes"
  (if (eq sens 'line)
      (list y x)
      (list x y)))

(defun main()
  (handler-case
      (let (( game (make-game "Grids/1.sudoku")))
	(init-game game)
	(sudoku game))
    (T (c)
      (format T "~%~a~%" c)
      (sb-ext:exit))))

(defun init-sudoku ()
  )
